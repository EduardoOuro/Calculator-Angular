{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TicTacToeService {\n  constructor() {\n    this.TAM_TAB = 3;\n    this.X = 1;\n    this.O = 2;\n    this.VAZIO = 0;\n  }\n  inicializar() {\n    this._showInicio = true;\n    this._showTabuleiro = false;\n    this._showFinal = false;\n    this.numMovimentos = 0;\n    this._jogador = this.X;\n    this.vitoria = false;\n    this.inicializarTabuleiro();\n  }\n  inicializarTabuleiro() {\n    this.tabuleiro = [this.TAM_TAB];\n    for (let i = 0; i < this.TAM_TAB; i++) {\n      this.tabuleiro[i] = [this.VAZIO, this.VAZIO, this.VAZIO];\n    }\n  }\n  get showInicio() {\n    return this._showInicio;\n  }\n  get showTabuleiro() {\n    return this._showTabuleiro;\n  }\n  get showFinal() {\n    return this._showFinal;\n  }\n  get jogador() {\n    return this._jogador;\n  }\n  iniciarJogo() {\n    this._showInicio = false;\n    this._showTabuleiro = true;\n  }\n  jogar(posX, posY) {\n    // jogada inválida\n    if (this.tabuleiro[posX][posY] !== this.VAZIO || this.vitoria) {\n      return;\n    }\n    this.tabuleiro[posX][posY] = this._jogador;\n    this.numMovimentos++;\n    this.vitoria = this.fimJogo(posX, posY, this.tabuleiro, this._jogador);\n    this._jogador = this._jogador === this.X ? this.O : this.X;\n    if (!this.vitoria && this.numMovimentos < 9) {\n      this.cpuJogar();\n    }\n    // houve vitória\n    if (this.vitoria !== false) {\n      this._showFinal = true;\n    }\n    // empate\n    if (!this.vitoria && this.numMovimentos === 9) {\n      this._jogador = 0;\n      this._showFinal = true;\n    }\n  }\n  fimJogo(linha, coluna, tabuleiro, jogador) {\n    let fim = false;\n    // valida a linha\n    if (tabuleiro[linha][0] === jogador && tabuleiro[linha][1] === jogador && tabuleiro[linha][2] === jogador) {\n      fim = [[linha, 0], [linha, 1], [linha, 2]];\n    }\n    // valida a coluna\n    if (tabuleiro[0][coluna] === jogador && tabuleiro[1][coluna] === jogador && tabuleiro[2][coluna] === jogador) {\n      fim = [[0, coluna], [1, coluna], [2, coluna]];\n    }\n    // valida as diagonais\n    if (tabuleiro[0][0] === jogador && tabuleiro[1][1] === jogador && tabuleiro[2][2] === jogador) {\n      fim = [[0, 0], [1, 1], [2, 2]];\n    }\n    if (tabuleiro[0][2] === jogador && tabuleiro[1][1] === jogador && tabuleiro[2][0] === jogador) {\n      fim = [[0, 2], [1, 1], [2, 0]];\n    }\n    return fim;\n  }\n  cpuJogar() {\n    // verifica jogada de vitória\n    let jogada = this.obterJogada(this.O);\n    if (jogada.length <= 0) {\n      // tenta jogar para evitar derrota\n      jogada = this.obterJogada(this.X);\n    }\n    if (jogada.length <= 0) {\n      // joga aleatório\n      let jogadas = [];\n      for (let i = 0; i < this.TAM_TAB; i++) {\n        for (let j = 0; j < this.TAM_TAB; j++) {\n          if (this.tabuleiro[i][j] === this.VAZIO) {\n            jogadas.push([i, j]);\n          }\n        }\n      }\n      let k = Math.floor(Math.random() * (jogadas.length - 1));\n      jogada = [jogadas[k][0], jogadas[k][1]];\n    }\n    this.tabuleiro[jogada[0]][jogada[1]] = this._jogador;\n    this.numMovimentos++;\n    this.vitoria = this.fimJogo(jogada[0], jogada[1], this.tabuleiro, this._jogador);\n    this._jogador = this._jogador === this.X ? this.O : this.X;\n  }\n  obterJogada(jogador) {\n    let tab = this.tabuleiro;\n    for (let lin = 0; lin < this.TAM_TAB; lin++) {\n      for (let col = 0; col < this.TAM_TAB; col++) {\n        if (tab[lin][col] !== this.VAZIO) {\n          continue;\n        }\n        tab[lin][col] = jogador;\n        if (this.fimJogo(lin, col, tab, jogador)) {\n          return [lin, col];\n        }\n        tab[lin][col] = this.VAZIO;\n      }\n    }\n    return [];\n  }\n  exibirX(posX, posY) {\n    return this.tabuleiro[posX][posY] === this.X;\n  }\n  exibirO(posX, posY) {\n    return this.tabuleiro[posX][posY] === this.O;\n  }\n  exibirVitoria(posX, posY) {\n    let exibirVitoria = false;\n    if (!this.vitoria) {\n      return exibirVitoria;\n    }\n    for (let pos of this.vitoria) {\n      if (pos[0] === posX && pos[1] === posY) {\n        exibirVitoria = true;\n        break;\n      }\n    }\n    return exibirVitoria;\n  }\n  novoJogo() {\n    this.inicializar();\n    this._showFinal = false;\n    this._showInicio = false;\n    this._showTabuleiro = true;\n  }\n}\nTicTacToeService.ɵfac = function TicTacToeService_Factory(t) {\n  return new (t || TicTacToeService)();\n};\nTicTacToeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TicTacToeService,\n  factory: TicTacToeService.ɵfac\n});","map":{"version":3,"mappings":"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","names":["TicTacToeService","constructor","inicializar","_showInicio","_showTabuleiro","_showFinal","numMovimentos","_jogador","X","vitoria","inicializarTabuleiro","tabuleiro","TAM_TAB","i","VAZIO","showInicio","showTabuleiro","showFinal","jogador","iniciarJogo","jogar","posX","posY","fimJogo","O","cpuJogar","linha","coluna","fim","jogada","obterJogada","length","jogadas","j","push","k","Math","floor","random","tab","lin","col","exibirX","exibirO","exibirVitoria","pos","novoJogo","factory"],"sourceRoot":"","sources":["/home/luis.conrado@VALEMOBI.CORP/Documentos/GitAngular/Calculator-Angular/src/app/tic-tac-toe/services/tic-tac-toe.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TicTacToeService {\n\n  private readonly TAM_TAB: number = 3;\n  private readonly X: number = 1;\n  private readonly O: number = 2;\n  private readonly VAZIO: number = 0;\n\n  private tabuleiro: any;\n  private numMovimentos!: number;\n  private vitoria: any;\n\n  private _jogador!: number;\n  private _showInicio!: boolean;\n  private _showTabuleiro!: boolean;\n  private _showFinal!: boolean;\n\n  constructor() { }\n\n  inicializar(): void {\n    this._showInicio = true;\n    this._showTabuleiro = false;\n    this._showFinal = false;\n    this.numMovimentos = 0;\n    this._jogador = this.X;\n    this.vitoria = false;\n    this.inicializarTabuleiro();\n  }\n\n  inicializarTabuleiro(): void {\n    this.tabuleiro = [this.TAM_TAB];\n    for (let i = 0; i < this.TAM_TAB; i++) {\n      this.tabuleiro[i] = [this.VAZIO, this.VAZIO, this.VAZIO];\n    }\n  }\n\n  get showInicio(): boolean {\n    return this._showInicio;\n  }\n\n  get showTabuleiro(): boolean {\n    return this._showTabuleiro;\n  }\n\n  get showFinal(): boolean {\n    return this._showFinal;\n  }\n\n  get jogador(): number {\n    return this._jogador;\n  }\n\n  iniciarJogo(): void {\n    this._showInicio = false;\n    this._showTabuleiro = true;\n  }\n\n  jogar(posX: number, posY: number): void {\n    // jogada inválida\n    if (this.tabuleiro[posX][posY] !== this.VAZIO || \n      this.vitoria) {\n      return;\n    }\n\n    this.tabuleiro[posX][posY] = this._jogador;\n    this.numMovimentos++;\n    this.vitoria = this.fimJogo(posX, posY, \n      this.tabuleiro, this._jogador);\n    this._jogador = (this._jogador === this.X) ? this.O : this.X;\n\n    if (!this.vitoria && this.numMovimentos < 9) {\n      this.cpuJogar();\n    }\n\n    // houve vitória\n    if (this.vitoria !== false) {\n      this._showFinal = true;\n    }\n\n    // empate\n    if (!this.vitoria && this.numMovimentos === 9) {\n      this._jogador = 0;\n      this._showFinal = true;\n    }\n  }\n\n  fimJogo(linha: number, coluna: number, \n      tabuleiro: any, jogador: number) {\n    let fim: any = false;\n\n    // valida a linha\n    if (tabuleiro[linha][0] === jogador && \n      tabuleiro[linha][1] === jogador && \n      tabuleiro[linha][2] === jogador) {\n      fim = [[linha, 0], [linha, 1], [linha, 2]];\n    }\n\n    // valida a coluna\n    if (tabuleiro[0][coluna] === jogador && \n      tabuleiro[1][coluna] === jogador && \n      tabuleiro[2][coluna] === jogador) {\n      fim = [[0, coluna], [1, coluna], [2, coluna]];\n    }\n\n    // valida as diagonais\n    if (tabuleiro[0][0] === jogador && \n      tabuleiro[1][1] === jogador && \n      tabuleiro[2][2] === jogador) {\n      fim = [[0, 0], [1, 1], [2, 2]];\n    }\n\n    if (tabuleiro[0][2] === jogador && \n      tabuleiro[1][1] === jogador && \n      tabuleiro[2][0] === jogador) {\n      fim = [[0, 2], [1, 1], [2, 0]];\n    }\n\n    return fim;\n  }\n\n  cpuJogar(): void {\n    // verifica jogada de vitória\n    let jogada: number[] = this.obterJogada(this.O);\n\n    if (jogada.length <= 0) {\n      // tenta jogar para evitar derrota\n      jogada = this.obterJogada(this.X);\n    }\n\n    if (jogada.length <= 0) {\n      // joga aleatório\n      let jogadas: any = [];\n      for (let i=0; i<this.TAM_TAB; i++) {\n        for (let j=0; j<this.TAM_TAB; j++) {\n          if (this.tabuleiro[i][j] === this.VAZIO) {\n            jogadas.push([i, j]);\n          }\n        }\n      }\n      let k = Math.floor((Math.random() * (jogadas.length - 1)));\n      jogada = [jogadas[k][0], jogadas[k][1]];\n    }\n\n    this.tabuleiro[jogada[0]][jogada[1]] = this._jogador;\n    this.numMovimentos++;\n    this.vitoria = this.fimJogo(jogada[0], jogada[1],\n        this.tabuleiro, this._jogador);\n    this._jogador = (this._jogador === this.X) ? this.O : this.X;\n  }\n\n  obterJogada(jogador: number): number[] {\n    let tab = this.tabuleiro;\n    for (let lin = 0; lin < this.TAM_TAB; lin++) {\n      for (let col = 0; col < this.TAM_TAB; col++) {\n        if (tab[lin][col] !== this.VAZIO) {\n          continue;\n        }\n        tab[lin][col] = jogador;\n        if (this.fimJogo(lin, col, tab, jogador)) {\n          return [lin, col];\n        }\n        tab[lin][col] = this.VAZIO;\n      }\n    }\n    return [];\n  }\n\n  exibirX(posX: number, posY: number): boolean {\n    return this.tabuleiro[posX][posY] === this.X;\n  }\n\n  exibirO(posX: number, posY: number): boolean {\n    return this.tabuleiro[posX][posY] === this.O;\n  }\n\n  exibirVitoria(posX: number, posY: number): boolean {\n    let exibirVitoria: boolean = false;\n\n    if (!this.vitoria) {\n      return exibirVitoria;\n    }\n\n    for (let pos of this.vitoria) {\n      if (pos[0] === posX && pos[1] === posY) {\n        exibirVitoria = true;\n        break;\n      }\n    }\n\n    return exibirVitoria;\n  }\n\n  novoJogo(): void {\n    this.inicializar();\n    this._showFinal = false;\n    this._showInicio = false;\n    this._showTabuleiro = true;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}